{"version":3,"sources":["components/flip-card/FlipCard.tsx","components/flip-card-list/FlipCards.tsx","App.tsx","index.tsx"],"names":["FlipCardContent","props","content","title","FlipCard","useState","face","setFace","questionAndAnswer","className","onClick","question","answer","FlipCards","questionsAndAnswers","map","index","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yRAqCMA,EAAkB,SAACC,GACvB,MAA2BA,EAAMC,QAAzBC,EAAR,EAAQA,MAAOD,EAAf,EAAeA,QACf,OAAO,qCACL,6BAAKC,IACJD,GAAW,4BAAIA,QAILE,EA5BE,SAACH,GAChB,MAAwBI,mBAAS,SAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAGQC,EAAsBP,EAAtBO,kBAER,OACE,qBAAKC,UAAU,YAAYC,QAAS,kBALnBH,EAAiB,UAATD,EAAmB,OAAS,UAKH,YAAWA,EAA7D,SACE,sBAAKG,UAAU,kBAAf,UACE,qBAAKA,UAAU,kBAAf,SACE,cAAC,EAAD,CAAiBP,QAASM,EAAkBG,aAE9C,qBAAKF,UAAU,iBAAf,SACE,cAAC,EAAD,CAAiBP,QAASM,EAAkBI,iBCRvCC,EAZG,SAACZ,GACjB,IAAQa,EAAwBb,EAAxBa,oBACR,OACE,qBAAKL,UAAU,aAAf,SACGK,EAAoBC,KAAI,SAACP,EAAmBQ,GAApB,OACvB,cAAC,EAAD,CACUR,kBAAmBA,GADdQ,SCRjBF,G,MAAsB,CAC1B,CACEF,OAAQ,CACNT,MAAO,mEACPD,QAAS,8QAEXS,SAAU,CACRR,MAAO,2CAGX,CACES,OAAQ,CACNT,MAAO,mEACPD,QAAS,8QAEXS,SAAU,CACRR,MAAO,sEA4BEc,EAvBH,kBAAM,qBAAKR,UAAU,MAAf,SAChB,eAAC,IAAD,WACE,eAAC,IAAD,WACE,cAAC,IAAD,0BACA,cAAC,IAAD,oBACA,cAAC,IAAD,sBAGF,cAAC,IAAD,UACE,cAAC,EAAD,CAAUD,kBAAmB,CAC3BG,SAAU,CAAER,MAAO,yDACnBS,OAAQ,CAAET,MAAO,sFAGrB,cAAC,IAAD,UACE,cAAC,EAAD,CAAWW,oBAAqBA,MAElC,cAAC,IAAD,UACE,2ECzCNI,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.0058fe00.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport './FlipCard.scss';\n\nexport type QuestionOrAnswer = {\n  title: string,\n  content?: string\n}\n\nexport type QuestionAndAnswer = {\n  question: QuestionOrAnswer,\n  answer: QuestionOrAnswer\n}\n\ntype Props = {\n  questionAndAnswer: QuestionAndAnswer\n}\n\nconst FlipCard = (props: Props) => {\n  const [face, setFace] = useState('front');\n  const flip = () => setFace(face === 'front' ? 'back' : 'front');\n\n  const { questionAndAnswer } = props;\n\n  return (\n    <div className=\"flip-card\" onClick={() => flip()} data-face={face}>\n      <div className=\"flip-card-inner\">\n        <div className=\"flip-card-front\">\n          <FlipCardContent content={questionAndAnswer.question}/>\n        </div>\n        <div className=\"flip-card-back\">\n          <FlipCardContent content={questionAndAnswer.answer}/>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst FlipCardContent = (props: { content: QuestionOrAnswer }) => {\n  const { title, content } = props.content\n  return <>\n    <h3>{title}</h3>\n    {content && <p>{content}</p>}\n  </>;\n}\n\nexport default FlipCard","import React from \"react\";\nimport './FlipCards.scss';\nimport FlipCard, { QuestionAndAnswer } from \"../flip-card/FlipCard\";\n\nexport type QuestionAndAnswers = Array<QuestionAndAnswer>;\n\ntype Props = {\n  questionsAndAnswers: QuestionAndAnswers\n}\n\nconst FlipCards = (props: Props) => {\n  const { questionsAndAnswers } = props\n  return (\n    <div className=\"flip-cards\">\n      {questionsAndAnswers.map((questionAndAnswer, index) =>\n        <FlipCard key={index}\n                  questionAndAnswer={questionAndAnswer}/>\n      )}\n    </div>\n  );\n}\n\nexport default FlipCards;\n\n","import React from 'react';\nimport { Tab, TabList, TabPanel, Tabs } from 'react-tabs';\nimport 'react-tabs/style/react-tabs.css';\nimport FlipCards from \"./components/flip-card-list/FlipCards\";\nimport FlipCard from \"./components/flip-card/FlipCard\";\nimport './App.css';\n\nconst questionsAndAnswers = [\n  {\n    answer: {\n      title: \"AWS Health Events - Comment recevoir les alertes de santé aws\",\n      content: \"Les alertes de santé vous informent d'un changement, qui a ou qui aura, un impact sur ce que vous avez déployé sur AWS. C'est pourquoi il important de les prendre en charge au plus tôt. Pour ce faire nous vous présentons la solution aws health events.\"\n    },\n    question: {\n      title: \"A quoi servent les AWS Health events ?\"\n    }\n  },\n  {\n    answer: {\n      title: \"AWS Health Events - Comment recevoir les alertes de santé aws\",\n      content: \"Les alertes de santé vous informent d'un changement, qui a ou qui aura, un impact sur ce que vous avez déployé sur AWS. C'est pourquoi il important de les prendre en charge au plus tôt. Pour ce faire nous vous présentons la solution aws health events.\"\n    },\n    question: {\n      title: \"Comment savoir si ce que je déploie sur AWS aura un impact ?\"\n    }\n  },\n];\n\nconst App = () => <div className=\"App\">\n  <Tabs>\n    <TabList>\n      <Tab>Carte seule</Tab>\n      <Tab>Liste</Tab>\n      <Tab>Deck</Tab>\n    </TabList>\n\n    <TabPanel>\n      <FlipCard questionAndAnswer={{\n        question: { title: 'Comment se souvenir de tout pour quasiment toujours ?' },\n        answer: { title: 'Utiliser le mécanisme de la répétition espacée, et des flip-cards' },\n      }}/>\n    </TabPanel>\n    <TabPanel>\n      <FlipCards questionsAndAnswers={questionsAndAnswers}/>\n    </TabPanel>\n    <TabPanel>\n      <p>TODO : un deck n'est pas une liste</p>\n    </TabPanel>\n  </Tabs>\n</div>;\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}