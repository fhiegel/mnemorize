{"version":3,"sources":["components/flip-card/FlipCard.tsx","components/flip-card-list/FlipCards.tsx","App.tsx","index.tsx"],"names":["FlipCardContent","props","content","title","FlipCard","useState","face","setFace","questionAndAnswer","className","onClick","question","answer","FlipCards","questionsAndAnswers","map","index","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.61b602bc.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport './FlipCard.scss';\n\nexport type QuestionOrAnswer = {\n  title: string,\n  content?: string\n}\n\nexport type QuestionAndAnswer = {\n  question: QuestionOrAnswer,\n  answer: QuestionOrAnswer\n}\n\ntype Props = {\n  questionAndAnswer: QuestionAndAnswer\n}\n\nconst FlipCard = (props: Props) => {\n  const [face, setFace] = useState('front');\n  const flip = () => setFace(face === 'front' ? 'back' : 'front');\n\n  const { questionAndAnswer } = props;\n\n  return (\n    <div className=\"flip-card\" onClick={() => flip()} data-face={face}>\n      <div className=\"flip-card-inner\">\n        <div className=\"flip-card-front\">\n          <FlipCardContent content={questionAndAnswer.question}/>\n        </div>\n        <div className=\"flip-card-back\">\n          <FlipCardContent content={questionAndAnswer.answer}/>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst FlipCardContent = (props: { content: QuestionOrAnswer }) => {\n  const { title, content } = props.content\n  return <>\n    <h3>{title}</h3>\n    {content && <p>{content}</p>}\n  </>;\n}\n\nexport default FlipCard","import React from \"react\";\nimport './FlipCards.scss';\nimport FlipCard, { QuestionAndAnswer } from \"../flip-card/FlipCard\";\n\nexport type QuestionAndAnswers = Array<QuestionAndAnswer>;\n\ntype Props = {\n  questionsAndAnswers: QuestionAndAnswers\n}\n\nconst FlipCards = (props: Props) => {\n  const { questionsAndAnswers } = props\n  return (\n    <div className=\"flip-cards\">\n      {questionsAndAnswers.map((questionAndAnswer, index) =>\n        <FlipCard key={index}\n                  questionAndAnswer={questionAndAnswer}/>\n      )}\n    </div>\n  );\n}\n\nexport default FlipCards;\n\n","import React from 'react';\nimport {Tab, TabList, TabPanel, Tabs} from 'react-tabs';\nimport 'react-tabs/style/react-tabs.css';\nimport FlipCards from \"./components/flip-card-list/FlipCards\";\nimport FlipCard from \"./components/flip-card/FlipCard\";\nimport './App.css';\n\nconst questionsAndAnswers = [\n  {\n    question: {\n      title: \"TDD - RED\",\n      content: \"\"\n    },\n    answer: {\n      title: \"Make it fail\",\n      content: \"No code without a failing test\"\n    },\n  },\n  {\n    question: {\n      title: \"TDD - GREEN\",\n      content: \"\"\n    },\n    answer: {\n      title: \"Make it work\",\n      content: \"As simply as possible\"\n    }\n  },\n  {\n    answer: {\n      title: \"Make it better\",\n      content: \"No new functionality\"\n    },\n    question: {\n      title: \"TDD - REFACTOR\",\n      content: \"\"\n    }\n  },\n  {\n    question: {\n      title: \"TDD - Règle #1\",\n      content: \"\"\n    },\n    answer: {\n      title: \"Red First !\",\n      content: \"Vous n’avez pas le droit d’écrire une ligne de code de production si ce n’est pour faire passer un test d’échec à réussite.\"\n    },\n  },\n  {\n    question: {\n      title: \"TDD - Règle #2\",\n      content: \"\"\n    },\n    answer: {\n      title: \"Un seul à la fois !\",\n      content: \"Vous n’avez pas le droit d’écrire plus d’un test unitaire en échec, une erreur de compilation est un échec.\"\n    },\n  },\n  {\n    question: {\n      title: \"TDD - Règle #3\",\n      content: \"\"\n    },\n    answer: {\n      title: \"Ça est frugal !\",\n      content: \"Vous n’avez pas le droit d’écrire plus de code de production que nécessaire pour faire passer le test d’échec à réussite.\"\n    },\n  },\n  {\n    question: {\n      title: \"4 règles du Simple Design\",\n      content: \"\"\n    },\n    answer: {\n      title: \"\",\n      content: \"1. Passes the tests\\n\" +\n        \"2. Reveals intention (should be easy to understand)\\n\" +\n        \"3. No duplication in same context (DRY)\\n\" +\n        \"4. Fewest elements (remove anything that doesn’t serve the three previous rules)\"\n    },\n  },\n  {\n    question: {\n      title: \"The 8 Core Drives of Gamification\",\n      content: \"Octalysis Framework\"\n    },\n    answer: {\n      title: \"\",\n      content: \"1) Epic Meaning & Calling\\n\"\n        + \"2) Development & Accomplishment\\n\"\n        + \"3) Empowerment of Creativity & Feedback\\n\"\n        + \"4) Ownership & Possession\\n\"\n        + \"5) Social Influence & Relatedness\\n\"\n        + \"6) Scarcity & Impatience\\n\"\n        + \"7) Unpredictability & Curiosity\\n\"\n        + \"8) Loss & Avoidance\"\n    },\n  },\n  {\n    question: {\n      title: \"La cinquième discipline - Levier des organisations apprenantes\",\n      content: \"Peter Senge\"\n    },\n    answer: {\n      title: \"\",\n      content:\n          \"La maîtrise personnelle : clarifier notre approche de la réalité.\\n\"\n        + \"Les modèles mentaux : apprendre à nous défaire de nos préjugés.\\n\"\n        + \"La vision partagée : savoir relier des individus ensemble.\\n\"\n        + \"L'apprenance en équipe : favoriser la réflexion collective par le dialogue.\\n\"\n        + \"La pensée systémique : voir les problèmes dans leur ensemble.\\n\"\n    },\n  },\n  {\n    question: {\n      title: \"Les différentes sortes de test\",\n      content: \"\"\n    },\n    answer: {\n      title: \"\",\n      content:\n          \"Unitaires\\n\"\n        + \"Composants.\\n\"\n        + \"Intégration.\\n\"\n        + \"Contrat.\\n\"\n        + \"Bout-en-bout.\\n\"\n        + \"Exploratoires.\\n\"\n        + \"...\\n\"\n    },\n  },\n  {\n    question: {\n      title: \"SOLID\",\n      content: \"\"\n    },\n    answer: {\n      title: \"\",\n      content:\n          \"Single responsibility principle\"\n        + \"Open/closed principle\"\n        + \"Liskov substitution principle\"\n        + \"Interface segregation principle\"\n    },\n  },\n  {\n    question: {\n      title: \"SRP: Single responsibility principle\",\n      content: \"Responsabilité unique\"\n    },\n    answer: {\n      title: \"\",\n      content:\n          \"une classe, une fonction ou une méthode doit avoir une et une seule responsabilité\"\n    },\n  },\n  {\n    question: {\n      title: \"OCP: Open/closed principle\",\n      content: \"Ouvert/fermé\"\n    },\n    answer: {\n      title: \"\",\n      content:\n          \"une entité applicative (classe, fonction, module ...) doit être fermée à la modification directe mais ouverte à l'extension\"\n    },\n  },\n  {\n    question: {\n      title: \"LSP: Liskov substitution principle)\",\n      content: \"\"\n    },\n    answer: {\n      title: \"Substitution de Liskov\",\n      content:\n          \"une instance de type T doit pouvoir être remplacée par une instance de type G, tel que G sous-type de T, sans que cela ne modifie la cohérence du programme\"\n    },\n  },\n  {\n    question: {\n      title: \"ISP: Interface segregation principle\",\n      content: \"Ségrégation des interfaces\"\n    },\n    answer: {\n      title: \"\",\n      content:\n        \"préférer plusieurs interfaces spécifiques pour chaque client plutôt qu'une seule interface générale\"\n    },\n  },\n  {\n    question: {\n      title: \"DIP: Dependency inversion principle\",\n      content: \"Inversion des dépendances\"\n    },\n    answer: {\n      title: \"\",\n      content:\n        \"il faut dépendre des abstractions, pas des implémentations\"\n    },\n  },\n  {\n    question: {\n      title: \"Loi de Déméter\",\n      content: \"Principe de connaissance minimale\"\n    },\n    answer: {\n      title: \"« Ne parlez qu'à vos amis immédiats »\",\n      content:\n        \"pour les fonctions requiert que toute méthode {\\\\displaystyle M}M d'un objet {\\\\displaystyle O}O peut simplement invoquer les méthodes des types suivants d'objets :\\n\" +\n        \"\\n\" +\n        \"{\\\\displaystyle O}O lui-même\\n\" +\n        \"les paramètres de {\\\\displaystyle M}M\\n\" +\n        \"les objets que {\\\\displaystyle M}M crée/instancie\\n\" +\n        \"les objets membres de {\\\\displaystyle O}O\"\n    },\n  },\n  {\n    question: {\n      title: \"Avantage de la Loi de Déméter\",\n      content: \"\"\n    },\n    answer: {\n      title: \"\",\n      content:\n        \"L'avantage de suivre la règle de Déméter est que le logiciel résultat est plus maintenable et plus adaptable.\" +\n        \" Puisque les objets sont moins dépendants de la structure interne des autres objets, ceux-ci peuvent être changés sans changer le code de leurs appelants\"\n    },\n  },\n  {\n    question: {\n      title: \"Inconvénient de la Loi de Déméter\",\n      content: \"\"\n    },\n    answer: {\n      title: \"\",\n      content:\n        \"Un désavantage de la règle de Déméter est qu'elle requiert l'écriture d'un grand nombre de petites méthodes \\\"wrapper\\\" pour propager les appels de méthodes à leurs composants. \" +\n        \"Cela peut augmenter le temps de développement initial, accroître l'espace mémoire utilisé, et notablement diminuer les performances.\"\n    },\n  },\n  {\n    question: {\n      title: \"Splitter vs Lumper\",\n      content: \"\"\n    },\n    answer: {\n      title: \"\",\n      content:\n        \"\"\n    },\n  },\n\n  {\n    question: {\n      title: \"KISS\",\n      content: \"\"\n    },\n    answer: {\n      title: \"\",\n      content:\n        \"\"\n    },\n  },\n\n  {\n    question: {\n      title: \"DRY\",\n      content: \"\"\n    },\n    answer: {\n      title: \"\",\n      content:\n        \"\"\n    },\n  },\n\n  {\n    question: {\n      title: \"YAGNI\",\n      content: \"\"\n    },\n    answer: {\n      title: \"\",\n      content:\n        \"\"\n    },\n  },\n  {\n    question: {\n      title: \"GRASP \",\n      content: \"General responsibility assignment software patterns\"\n    },\n    answer: {\n      title: \"\",\n      content:\n        \"https://fr.wikipedia.org/wiki/GRASP_(programmation)\"\n    },\n  },\n  {\n    question: {\n      title: \"SLAP\",\n      content: \"Single Level of Abstraction Principle\\n\"\n    },\n    answer: {\n      title: \"Don’t mix levels of abstraction !\\n\",\n      content:\n        \"It is difficult to read the code when you have to jump mentally between abstraction levels, which is what the SLAP principle tries to avoid.\\n\" +\n        \"Functions should do just one thing, and they should do it well.\\n\" +\n        \"— Robert C. Martin\\n\"\n    },\n  },\n];\n\nconst App = () => <div className=\"App\">\n  <Tabs>\n    <TabList>\n      <Tab>Carte seule</Tab>\n      <Tab>Liste</Tab>\n      <Tab>Deck</Tab>\n    </TabList>\n\n    <TabPanel>\n      <FlipCard questionAndAnswer={{\n        question: {title: 'Comment se souvenir de tout pour quasiment toujours ?'},\n        answer: {title: 'Utiliser le mécanisme de la répétition espacée, et des flip-cards'},\n      }}/>\n    </TabPanel>\n    <TabPanel>\n      <FlipCards questionsAndAnswers={questionsAndAnswers}/>\n    </TabPanel>\n    <TabPanel>\n      <p>TODO : un deck n'est pas une liste</p>\n    </TabPanel>\n  </Tabs>\n</div>;\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './css/themes/shodo.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}